<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE preface PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN"
                 "http://www.oasis-open.org/docbook/xml/4.4/docbookx.dtd">
<chapter id="get-started">
    <title>Getting Started</title>

    <para>The focus on NOSQL databases is a recent one, even if many of those stores have existed for some years now.
	That's why this document will not only guide you through the relevant parts of the DATAGRAPH
	API, but also explain some key concepts of graph databases.
	</para>
	<para>
		After reading this document, you should be able to integrate DATAGRAPH in your own existing or new applications.
		If there are any issues that you don't understand or think are explained in a too complicated way, please report back any
		problems or suggestions. This would also benefit future readers of this documentation.
	</para>

    <section id="get-started:first-steps">
		<title>First Steps</title>
		
		<para>As explained in <xref linkend="why-sd-graph"/>, Spring Data Graph (DATAGRAPH) provides integration 
		between the Spring framework and graph databases. Familiarity with the Spring framework is assumed as stated in <xref linkend="introduction"/>, and only
		minimally cross referenced here. Graph databases and Neo4j in particular are explained in a bit more detail.
		The main focus of this document is however on explaining the steps needed to get a DATAGRAPH-backed application up and running.
		</para>
		  
		<section id="get-started:first-steps:spring">
			<title>Knowing Spring</title>
			<para>DATAGRAPH makes heavy use of Spring Framework's <ulink url="http://static.springframework.org/spring/docs/3.0.x/reference/spring-core.html">core</ulink> functionality,
			such as the <ulink url="http://static.springframework.org/spring/docs/3.0.x/reference/beans.html">IoC</ulink> container,
			<ulink url="http://static.springsource.org/spring/docs/3.0.x/reference/validation.html#core-convert">converter</ulink> API and the 
			<ulink url="http://static.springframework.org/spring/docs/3.0.x/reference/aop.html">AOP</ulink> infrastructure. While it is less important
			to know the Spring APIs, understanding the concepts behind them is.
			The Spring Framework documentation
			<ulink url="http://www.springsource.org/documentation">home page</ulink> is a good starting point for
			developers wanting become more familiar with Spring Framework.</para>
		</section>
		<section id="get-started:first-steps:nosql">
			<title>Knowing NOSQL and graph databases</title>
			<para>The recent interest in NOSQL databases is mainly driven by the need for finding the best suited storage solution for data
				structured in a specific way. It should fit the data, not the other way round. Another issue is the scalability of the
				database, especially with today's fast growing user bases handling large amounts of data in a short time. There are many NOSQL databases,
				and one should become familiar with the different concepts, advantages, and disadvantages before choosing
				a solution. A problem with the NOSQL databases is the different data access APIs that are provided. Spring Data aims at easing this burden by
				providing consistent abstractions over those APIs, leveraging SpringSource's experience and good reputation in this area.
			</para>
			<para>
				Graph databases are a particularly good fit for large networks of connected information (objects). They map objects to nodes and connections to
				relationships. Examples of such datasets are social networks, geospatial information, network layouts, and hardware or dependency graphs.
				Neo4j is the first graph database that is tightly integrated with the DATAGRAPH project.
			</para>
		</section>
		<section id="get-started:first-steps:samples">
			<title>Trying Out The Samples</title>
			<para>DATAGRAPH comes with a number of <ulink url="http://github.com/SpringSource/spring-data-graph-examples">samples</ulink> 
				and unit test cases (if you accessed the sources via 
				<ulink url="http://github.com/SpringSource/spring-data-graph">github</ulink> or maven).
			</para>
			<para>The current distribution contains:</para>
			<itemizedlist>
				<listitem>
					<para>Hello Worlds sample</para>
					<para>The Hello Worlds sample application is a simple console application with unit tests, that
					creates some Worlds (entities / nodes) and Rocket Routes (relationships) in a Galaxy (graph) and then 
					reads them back and prints them out.</para>
					<para>The unit tests demonstrate some other features of DATAGRAPH. The sample comes with a minimal config for
						maven and spring to get up and running quickly.
						</para>
				</listitem>
				<listitem>
					<para>IMDB sample</para>
					<para>A web application that imports datasets from the Internet Movie Database (IMDB) into the graph database. It allows listings of movies with their actors and actors with their roles in different movies. It also uses graph traversal operations to calculate the Kevin Bacon number (distance to a actor that has acted with Kevin Bacon). This sample application shows the basic usage of DATAGRAPH in a more complex setting with several annotated entities and relationships as well as usage of indices and graph traversal.</para>
				</listitem>
				<listitem>
					<para>MyRestaurant sample</para>
					<para>Simple webapp for managing users and restaurants, with the ability to add a restaurants as favorites to a user.</para>
				</listitem>
				<listitem>
					<para>MyRestaurant-Social sample</para>
					<para>An extended version of the MyRestaurant sample application that adds social networking functionality to it. It is possible to have friends and to add rated relationships to restaurants. The relationships and some of the properties of the entities are transparently stored in the graph database. There is also a graph traversal that provides a recommendation based on your friends' (and their friends') rating of restaurants.</para>
				</listitem>
			</itemizedlist> 
			<para>Most of the samples are web applications that can be easily built and run using mvn jetty:run.</para>
		</section>
	</section>
    
    <section id="get-started:help">
		<title>Need Help?</title>
		
		<para>If you encounter issues or you are just looking for an advice, feel free to use one of the links below:</para>
		
		<section id="get-started:help:community">
			<title>Spring Data homepage</title>
			<para>The Spring Data <ulink url="http://www.springsource.org/spring-data">homepage</ulink> provides all the necessary links for information, community forums and code repositories.
			</para>
		</section>
		<section id="get-started:help:professional">
  		    <title>Professional Support</title>
			<para>Professional, from-the-source support, with guaranteed response time, is available from <ulink url="http://www.springsource.com">SpringSource</ulink>,
			the company behind Spring Data and Spring.  
			</para>
		</section>
    </section>
    
    <section id="get-started:up-to-date">
		<title>Following Development</title>
		
		<para>For information on the Spring Data source code repository, nightly builds and snapshot artifacts please see the Spring Data home 
		<ulink url="http://www.springsource.org/spring-data">page</ulink>.   
		</para>
		<para>You can help make Spring Data best serve the needs of the Spring community by interacting with developers through the
		<ulink url="http://forum.springsource.org/forumdisplay.php?f=27">community forums</ulink>.</para>
		<para>If you encounter a bug or want to suggest an improvement, 
		please create a ticket on the <ulink url="https://jira.springframework.org/browse/DATAGRAPH">DATAGRAPH issue tracker</ulink>.</para>
		<para>To stay up to date with the latest news and announcements in the Spring eco system, subscribe to the 
		<ulink url="http://www.springframework.org/">Spring Community Portal</ulink>.</para>
		<para>Lastly, you can follow the <ulink url="http://blog.springsource.com/category/data-access/">SpringSource Data blog</ulink> or the project team on Twitter
		(@<ulink url="http://twitter.com/SpringData">SpringData</ulink>)</para>
	</section>
    
</chapter>